/*
 * MarvelComicsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/14/2016
 */
package com.marvel.gateway;

import android.content.Context;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import com.android.volley.RequestQueue;
import com.android.volley.toolbox.Volley;

public class Configuration {
    //The base Uri for API calls
    public static String baseUri = "http://gateway.marvel.com/v1/public";

    //retains status whether we have already initialized
    private static boolean initialized = false;
    private static RequestQueue requestQueue = null;

    //private backing field for Referer
    private static String referer = null;

    //private backing field for Apikey
    private static String apikey = "";

    //Initialization of configuration
    public static void initialize(Context context){

        requestQueue = Volley.newRequestQueue(context);
        String packageName = context.getPackageName();
        PackageManager packageManager = context.getPackageManager();
        try {
            ApplicationInfo app = packageManager.getApplicationInfo(packageName, PackageManager.GET_META_DATA);
            Bundle bundle = app.metaData;

            if(bundle != null) {
                referer = bundle.getString("referer");
                apikey = bundle.getString("apikey");
            }

            initialized = true;
        }
        catch (Exception ex){
            throw new IllegalStateException("Unable to initialize", ex);
        }
    }

    // volley request queue needs to be initialized before use
    public static RequestQueue getRequestQueue() {
        if(!initialized)
            throw new IllegalStateException("Must initialize before accessing request queue");
        return requestQueue;
    }
    
    //TODO: Add description
    public static String getReferer() {
        if(!initialized)
            throw new IllegalStateException("Must initialize configuration before use");

        return referer;
    }

    /**
     * Set value for referer
     * @param referer 
     */
    public static void setReferer(String referer) {
        Configuration.referer = referer;
    }

    //TODO: Add description
    public static String getApikey() {
        if(!initialized)
            throw new IllegalStateException("Must initialize configuration before use");

        return apikey;
    }

    /**
     * Set value for apikey
     * @param apikey 
     */
    public static void setApikey(String apikey) {
        Configuration.apikey = apikey;
    }

}
